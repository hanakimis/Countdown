//
//  TimerV01.swift
//  timer
//
//  Created by Hana Kim on 12/6/15.
//  Copyright (c) 2015 Hana Inc.. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

open class TimerV01 : NSObject {
    
    //// Drawing Methods
    
    open class func drawTimer() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()
        
        //// Color Declarations
        let sliceBlue = UIColor(red: 0.129, green: 0.549, blue: 0.765, alpha: 1.000)
        let backgroundColor = UIColor(red: 0.149, green: 0.169, blue: 0.192, alpha: 1.000)
        
        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 375, height: 667))
        backgroundColor.setFill()
        rectanglePath.fill()
        
        
        //// seconds Drawing
        let secondsRect = CGRect(x: 125, y: 195, width: 126, height: 126)
        let secondsPath = UIBezierPath()
        secondsPath.addArc(withCenter: CGPoint(x: secondsRect.midX, y: secondsRect.midY), radius: secondsRect.width / 2, startAngle: -90 * .pi / 180, endAngle: 270 * .pi / 180, clockwise: true)
        
        sliceBlue.setStroke()
        secondsPath.lineWidth = 7.75
        context?.saveGState()
        context?.setLineDash(phase: 0, lengths: [0.5, 5.5])
        secondsPath.stroke()
        context?.restoreGState()
        
        
        //// minutes Drawing
        let minutesRect = CGRect(x: 139, y: 209, width: 98, height: 98)
        let minutesPath = UIBezierPath()
        minutesPath.addArc(withCenter: CGPoint(x: minutesRect.midX, y: minutesRect.midY), radius: minutesRect.width / 2, startAngle: -90 * .pi/180, endAngle: 270 * .pi/180, clockwise: true)
        
        sliceBlue.setStroke()
        minutesPath.lineWidth = 12
        context?.saveGState()
        context?.setLineDash(phase: 0, lengths: [0.5, 5.5])
        minutesPath.stroke()
        context?.restoreGState()
        
        
        //// hours Drawing
        let hoursRect = CGRect(x: 154, y: 225, width: 67, height: 67)
        let hoursPath = UIBezierPath()
        hoursPath.addArc(withCenter: CGPoint(x: hoursRect.midX, y: hoursRect.midY), radius: hoursRect.width / 2, startAngle: -90 * .pi/180, endAngle: 270 * .pi/180, clockwise: true)
        
        sliceBlue.setStroke()
        hoursPath.lineWidth = 12
        context?.saveGState()
        context?.setLineDash(phase: 0, lengths: [0.75, 5.25])
        hoursPath.stroke()
        context?.restoreGState()
        
        
        //// day fill Drawing
        let dayFillRect = CGRect(x: 165, y: 236, width: 45, height: 45)
        let dayFillPath = UIBezierPath()
        dayFillPath.addArc(withCenter: CGPoint(x: dayFillRect.midX, y: dayFillRect.midY), radius: dayFillRect.width / 2, startAngle: -180 * .pi/180, endAngle: -70 * .pi/180, clockwise: true)
        dayFillPath.addLine(to: CGPoint(x: dayFillRect.midX, y: dayFillRect.midY))
        dayFillPath.close()
        
        sliceBlue.setFill()
        dayFillPath.fill()
        sliceBlue.setStroke()
        dayFillPath.lineWidth = 2
        dayFillPath.stroke()
    }
}
